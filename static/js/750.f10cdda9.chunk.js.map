{"version":3,"file":"static/js/750.f10cdda9.chunk.js","mappings":"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","sources":["components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/ContactList/ContactItem.styled.js","components/ContactList/ContactItem.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx","redux/contacts/contactsSelectors.js","../node_modules/@mui/icons-material/Delete.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Table = styled.table`\n  margin: 0 auto;\n\n  border-collapse: collapse;\n  border-radius: 10px;\n  overflow: hidden;\n\n  tbody > tr:hover {\n    background-color: #eeffee;\n  }\n\n  th,\n  td {\n    padding: 10px;\n  }\n`;\n\nexport const Thead = styled.thead`\n  text-align: left;\n  color: ${p => p.theme.colors.muted};\n`;\n","import Box from 'components/Box';\nimport { ContactItem } from 'components/ContactList'; //\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeContact } from 'redux/contacts/contactsOperations';\nimport { getContacts } from 'redux/contacts/contactsSelectors';\nimport { getFilter } from 'redux/filter/filterSlice';\nimport { Table, Thead } from './ContactList.styled';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(getContacts);\n  // console.log(contacts);\n  const filter = useSelector(getFilter);\n\n  const filteredContacts = contacts.filter(e =>\n    e.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  const deleteContact = id => {\n    dispatch(removeContact(id));\n  };\n\n  return (\n    <div>\n      <Table>\n        <Thead>\n          <tr>\n            <Box as=\"th\" width=\"50px\">\n              Avatar\n            </Box>\n            <Box as=\"th\" width=\"300px\">\n              Name\n            </Box>\n            <Box as=\"th\" width=\"300px\">\n              Number\n            </Box>\n            <Box as=\"th\" width=\"50px\">\n              Option\n            </Box>\n          </tr>\n        </Thead>\n        <tbody>\n          {filteredContacts.map(({ id, avatar, name, number }) => {\n            return (\n              <ContactItem\n                key={id}\n                id={id}\n                avatar={avatar}\n                name={name}\n                number={number}\n                deleteContact={deleteContact}\n              />\n            );\n          })}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\nimport IconButton from '@mui/material/IconButton';\n\nexport const Name = styled.span`\n  color: ${p => p.theme.colors.text};\n  margin-right: ${p => p.theme.space[3]}px;\n`;\n\nexport const Number = styled.span`\n  color: ${p => p.theme.colors.text};\n`;\n\nexport const HoverButton = styled(IconButton)`\n  :hover {\n    color: red;\n  }\n`;\n","import Avatar from 'react-avatar';\nimport { HoverButton } from './ContactItem.styled';\nimport PropTypes from 'prop-types';\nimport Box from 'components/Box';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nexport const ContactItem = ({ id, name, number, deleteContact }) => {\n  return (\n    <Box as=\"tr\" key={id}>\n      <td>\n        <Avatar name={name} size={30} round={true} textSizeRatio={2.5} />\n      </td>\n      <td>{name}</td>\n      <td>{number}</td>\n      <td>\n        <HoverButton\n          type=\"button\"\n          onClick={() => deleteContact(id)}\n          aria-label=\"delete\"\n          size=\"small\"\n        >\n          <DeleteIcon fontSize=\"inherit\" />\n        </HoverButton>\n      </td>\n    </Box>\n  );\n};\n\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux/es/exports';\nimport { addContact } from 'redux/contacts/contactsOperations';\n// import { nanoid } from 'nanoid';\nimport {\n  getContacts,\n  getLoadingStatus,\n} from 'redux/contacts/contactsSelectors';\nimport Box from 'components/Box';\n\nimport Button from '@mui/material/Button';\nimport { TextField } from '@mui/material';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(getContacts);\n  const isLoading = useSelector(getLoadingStatus);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const allContactNames = contacts.map(contact => contact.name);\n\n  const checkDuplicates = name => {\n    if (allContactNames.includes(name)) {\n      alert(`${name} is already in contacts.`);\n      return true;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (checkDuplicates(name)) {\n      return;\n    }\n\n    const newContact = {\n      avatar: name,\n      name,\n      number,\n    };\n\n    dispatch(addContact(newContact));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Box\n      as=\"form\"\n      display=\"flex\"\n      alignItems=\"center\"\n      flexDirection=\"column\"\n      onSubmit={handleSubmit}\n    >\n      <TextField\n        id=\"name\"\n        label=\"Name\"\n        variant=\"outlined\"\n        size=\"small\"\n        margin=\"normal\"\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={handleChange}\n        inputProps={{\n          pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n        }}\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n\n      <TextField\n        id=\"tel\"\n        label=\"Number\"\n        variant=\"outlined\"\n        size=\"small\"\n        margin=\"normal\"\n        type=\"text\"\n        name=\"number\"\n        value={number}\n        onChange={handleChange}\n        inputProps={{\n          pattern:\n            '\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}',\n        }}\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n\n      <Button disabled={!name || !number} variant=\"text\" type=\"submit\">\n        {isLoading ? 'Loading...' : 'Add contact'}\n      </Button>\n    </Box>\n  );\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport { TextField } from '@mui/material';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter, getFilter } from 'redux/filter/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const handleFilter = e => {\n    dispatch(setFilter(e.target.value.toLowerCase()));\n  };\n\n  return (\n    <TextField\n      id=\"filter\"\n      label=\"Find contacts by name\"\n      variant=\"standard\"\n      margin=\"normal\"\n      helperText=\"Type to search\"\n      size=\"small\"\n      value={filter}\n      onChange={handleFilter}\n    />\n  );\n};\n\nexport default Filter;\n","import React, { useEffect } from 'react';\nimport Box from 'components/Box';\nimport ContactList from 'components/ContactList';\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\nimport { getContacts } from 'redux/contacts/contactsSelectors';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(getContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" p={5}>\n      <HelmetProvider>\n        <Helmet>\n          <title>Contacts page</title>\n        </Helmet>\n      </HelmetProvider>\n\n      <Box\n        width=\"350px\"\n        height=\"200px\"\n        textAlign=\"center\"\n        border=\"normal\"\n        borderColor=\"secondary\"\n        borderRadius=\"10px\"\n        p={4}\n        m={16}\n      >\n        <ContactForm />\n      </Box>\n      {contacts.length > 0 ? (\n        <Box display=\"flex\" flexDirection=\"column\">\n          <Filter />\n          <ContactList />\n        </Box>\n      ) : (\n        <h2>Contact list is empty</h2>\n      )}\n    </Box>\n  );\n};\n\nexport default ContactsPage;\n","export const getContacts = state => state.contacts.items;\n\nexport const getLoadingStatus = state => state.contacts.isLoading;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;"],"names":["Table","styled","Thead","p","theme","colors","muted","dispatch","useDispatch","contacts","useSelector","getContacts","filter","getFilter","filteredContacts","e","name","toLowerCase","includes","deleteContact","id","removeContact","Box","as","width","map","avatar","number","ContactItem","HoverButton","text","space","IconButton","size","round","textSizeRatio","type","onClick","Delete","fontSize","useState","setName","setNumber","isLoading","getLoadingStatus","handleChange","target","value","allContactNames","contact","reset","display","alignItems","flexDirection","onSubmit","preventDefault","alert","checkDuplicates","newContact","addContact","TextField","label","variant","margin","onChange","inputProps","pattern","title","required","Button","disabled","helperText","setFilter","useEffect","fetchContacts","height","textAlign","border","borderColor","borderRadius","m","length","state","items","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}